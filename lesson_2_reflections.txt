What happens when you initialize a repository? Why do you need to do it?

During initialisation we start tracking the the changes that is happening inside the folder with git's version control system. This way git will know when something changes in the document and it will be easy to rewert the file to an earlier version.

-------------------

How is the staging area different from the working directory and the repository? What value do you think it offers?

Tha staging area is good for testing and double-checking the feature / changes in the repository before committing it to master

-------------------
How can you use the staging area to make sure you have one commit per logical change?

you can add files separately to staging and the commit them one-by-one

-------------------

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches are helpful when you want to try out something new like a new feature or add a new language without changing the original logic inside the applications. Branches let developers creating parallel applications that have small/big differences between each other without the risk of breaking the existing code.

-------------------

How do the diagrams help you visualize the branch structure?

They help us understand at what point of time the branch was created. What commits/feature-set did master have at the point of creation.

-------------------

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

merging adds the feature to the master branch. it usually updates the current version of the application with a new feature

-------------------

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

git takes into consideration which files have been changed and stops when it finds a conflict this allows the developer to trace back the changes manually in the working directory.